# category_list
#-*- coding: utf-8 -*-
#!rendering: self

import re
import os

class EntryListRenderer(object):
    def __init__(self, context):
        self.context = context

    def createContentsList(self):
        catmap = {}
        for entry in sorted(self.context.getEntryList(), key=lambda entry: entry.entry_id, reverse=True):
            cats  = entry.getCategories()
            for cat in cats:
                if not cat in catmap: catmap[cat] = []
                catmap[cat].append(entry)
        return catmap

    def renderViewPage(self, html, entry):
        html.writeTag('h1', 'カテゴリ別一覧', {'class':'page_title'})

        catmap = self.createContentsList()

        html.writeOpenTag('table', {'border':'1'})
        for cat, entries in sorted(catmap.items(), key= lambda x : x[0].upper()):
            html.writeOpenTag('tr')
            html.writeOpenTag('td'),
            html.writeTag('a', cat, {'href': self.context.url_mapper.getCategoryUrl(cat)})
            html.writeCloseTag('td')
            html.writeOpenTag('td')
            html.writeOpenTag('ul')
            for entry in entries:
                html.writeOpenTag('li')
                html.writeTag('a', entry.getTitle(), 
                              {'href': entry.getViewPageUrl()})
                html.writeCloseTag('li')

            html.writeCloseTag('ul')
        html.writeCloseTag('table')

def createRenderer(mapper):
    return EntryListRenderer(mapper)
